# build.ninja generated by blade
ninja_required_version = 1.7
builddir = build64_release

pool heavy_pool
  depth = 1

rule copy
  command = cp -f ${in} ${out}
  description = [2;35mCOPY ${in} ${out}[0m

c_warnings = -Werror-implicit-function-declaration -Wall -Wextra -Wno-unused-but-set-variable -Wno-unused-parameter -Wno-unused-local-typedefs -Wno-missing-field-initializers -Wendif-labels -Wfloat-equal -Wformat=2 -Wframe-larger-than=69632 -Wmissing-include-dirs -Wpointer-arith -Wwrite-strings -Werror=char-subscripts -Werror=comments -Werror=empty-body -Werror=endif-labels -Werror=format -Werror=format-nonliteral -Werror=missing-include-dirs -Werror=overflow -Werror=parentheses -Werror=return-type -Werror=sequence-point -Werror=sign-compare -Werror=switch -Werror=type-limits -Werror=uninitialized -Werror=unused-label -Werror=unused-result -Werror=unused-value -Werror=unused-variable -Werror=write-strings
cxx_warnings = -Wno-invalid-offsetof -Wnon-virtual-dtor -Woverloaded-virtual -Wvla -Werror=conversion-null -Werror=non-virtual-dtor -Werror=overloaded-virtual -Werror=reorder -Werror=vla -Wall -Wextra -Wno-unused-but-set-variable -Wno-unused-parameter -Wno-unused-local-typedefs -Wno-missing-field-initializers -Wendif-labels -Wfloat-equal -Wformat=2 -Wframe-larger-than=69632 -Wmissing-include-dirs -Wpointer-arith -Wwrite-strings -Werror=char-subscripts -Werror=comments -Werror=empty-body -Werror=endif-labels -Werror=format -Werror=format-nonliteral -Werror=missing-include-dirs -Werror=overflow -Werror=parentheses -Werror=return-type -Werror=sequence-point -Werror=sign-compare -Werror=switch -Werror=type-limits -Werror=uninitialized -Werror=unused-label -Werror=unused-result -Werror=unused-value -Werror=unused-variable -Werror=write-strings
optimize_flags = -O2
optimize = $optimize_flags

rule cc
  command = export LC_ALL=C; gcc -o ${out} -MMD -MF ${out}.d -c -fPIC  -pipe -fno-omit-frame-pointer -g -DNDEBUG -D_FILE_OFFSET_BITS=64 -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS ${optimize} ${c_warnings} ${cppflags} -I. -Ibuild64_release ${includes} ${in} -H 2> ${out}.err; ec=$$?; awk '/Multiple include guards may be useful for:/ {stop=1} /^\.+ [^\/]/ { print $$0} !/^\.+ / && !stop {print $$0 > "/dev/stderr"}' < ${out}.err > ${out}.H ; rm -f ${out}.err; exit $$ec
  description = [2;35mCC ${in}[0m
  depfile = ${out}.d
  deps = gcc

rule cxx
  command = export LC_ALL=C; g++ -o ${out} -MMD -MF ${out}.d -c -fPIC -std=gnu++11 -pipe -fno-omit-frame-pointer -g -DNDEBUG -D_FILE_OFFSET_BITS=64 -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS ${optimize} ${cxx_warnings} ${cppflags} -I. -Ibuild64_release ${includes} ${in} -H 2> ${out}.err; ec=$$?; awk '/Multiple include guards may be useful for:/ {stop=1} /^\.+ [^\/]/ { print $$0} !/^\.+ / && !stop {print $$0 > "/dev/stderr"}' < ${out}.err > ${out}.H ; rm -f ${out}.err; exit $$ec
  description = [2;35mCXX ${in}[0m
  depfile = ${out}.d
  deps = gcc

rule secretcc
  command = export LC_ALL=C;  g++ -o ${out} -MMD -MF ${out}.d -c -fPIC -std=gnu++11 -pipe -fno-omit-frame-pointer -g -DNDEBUG -D_FILE_OFFSET_BITS=64 -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS ${optimize} ${cxx_warnings} ${cppflags} -I. -Ibuild64_release ${includes} ${in} -H 2> ${out}.err; ec=$$?; awk '/Multiple include guards may be useful for:/ {stop=1} /^\.+ [^\/]/ { print $$0} !/^\.+ / && !stop {print $$0 > "/dev/stderr"}' < ${out}.err > ${out}.H ; rm -f ${out}.err; exit $$ec
  description = [2;35mSECRET CC ${in}[0m
  depfile = ${out}.d

rule cxxhdrs
  command = export LC_ALL=C; g++ -fdirectives-only -o /dev/null -E -MMD -MF ${out}.d -std=gnu++11 -pipe -fno-omit-frame-pointer -g -DNDEBUG -D_FILE_OFFSET_BITS=64 -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -w ${cppflags} -I. -Ibuild64_release ${includes} ${in} 2> ${out}.err || g++ -o /dev/null -E -MMD -MF ${out}.d -std=gnu++11 -pipe -fno-omit-frame-pointer -g -DNDEBUG -D_FILE_OFFSET_BITS=64 -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -w ${cppflags} -I. -Ibuild64_release ${includes} ${in} 2> ${out}.err; ec=$$?; awk '/Multiple include guards may be useful for:/ {stop=1} /^\.+ [^\/]/ { print $$0} !/^\.+ / && !stop {print $$0 > "/dev/stderr"}' ${out}.err > ${out}; rm -f ${out}.err; exit $$ec
  description = [2;35mCXX HDRS ${in}[0m
  depfile = ${out}.d
  deps = gcc

rule ccincchk
  command = PYTHONPATH=/home/zhuchun/app_store/blade/blade-build/src:$$PYTHONPATH /usr/bin/python -m blade.builtin_tools cc_inclusion_check ${out} ${in}
  description = [2;35mCC INCLUSION CHECK ${in}[0m

rule ar
  command = rm -f $out; ar rcs $out $in
  description = [2;35mAR ${out}[0m

linkflags = 
intrinsic_linkflags = 

rule link
  command = g++ -o ${out} ${intrinsic_linkflags} ${linkflags} ${target_linkflags} @${out}.rsp ${extra_linkflags}
  description = [2;35mLINK BINARY ${out}[0m
  rspfile = ${out}.rsp
  rspfile_content = ${in}

rule solink
  command = g++ -shared -o ${out} ${intrinsic_linkflags} ${linkflags} ${target_linkflags} @${out}.rsp ${extra_linkflags}
  description = [2;35mLINK SHARED ${out}[0m
  rspfile = ${out}.rsp
  rspfile_content = ${in}

rule strip
  command = strip --strip-unneeded -o ${out} ${in}
  description = [2;35mSTRIP ${out}[0m

protocflags =
protoccpppluginflags =
protocjavapluginflags =
protocpythonpluginflags =

rule proto
  command = thirdparty/protobuf/bin/protoc --proto_path=. -I=thirdparty -I=`dirname ${in}` --cpp_out=build64_release ${protocflags} ${protoccpppluginflags} ${in}
  description = [2;35mPROTOC CPP ${in}[0m

rule protojava
  command = thirdparty/protobuf/bin/protoc --proto_path=. -I=thirdparty --java_out=build64_release/`dirname ${in}` ${protocjavapluginflags} ${in}
  description = [2;35mPROTOC JAVA ${in}[0m

rule protopython
  command = thirdparty/protobuf/bin/protoc --proto_path=. -I=thirdparty -I=`dirname ${in}` --python_out=build64_release ${protocpythonpluginflags} ${in}
  description = [2;35mPROTOC PYTHON ${in}[0m

rule protodescriptors
  command = thirdparty/protobuf/bin/protoc --proto_path=. -I=thirdparty -I=`dirname ${first}` --descriptor_set_out=${out} --include_imports --include_source_info ${in}
  description = [2;35mPROTODESCRIPTORS ${in}[0m

rule resource_index
  command = PYTHONPATH=/home/zhuchun/app_store/blade/blade-build/src:$$PYTHONPATH /usr/bin/python -m blade.builtin_tools resource_index ${name} ${path} ${out} ${in}
  description = [2;35mRESOURCE INDEX ${out}[0m

rule resource
  command = xxd -i ${in} | sed -e "s/^unsigned char /const char RESOURCE_/g" -e "s/^unsigned int /const unsigned int RESOURCE_/g" > ${out}
  description = [2;35mRESOURCE ${in}[0m

source_encoding = UTF-8
classpath = .
javacflags =

rule javac
  command = rm -fr ${classes_dir} && mkdir -p ${classes_dir} && javac -encoding ${source_encoding} -d ${classes_dir} -classpath ${classpath} ${javacflags} ${in} && sleep 0.01 && jar cf ${out} -C ${classes_dir} .
  description = [2;35mJAVAC ${out}[0m

rule javaresource
  command = PYTHONPATH=/home/zhuchun/app_store/blade/blade-build/src:$$PYTHONPATH /usr/bin/python -m blade.builtin_tools java_resource ${out} ${in}
  description = [2;35mJAVA RESOURCE ${resources_dir}[0m

rule javajar
  command = PYTHONPATH=/home/zhuchun/app_store/blade/blade-build/src:$$PYTHONPATH /usr/bin/python -m blade.builtin_tools java_jar jar --compression_level= ${out} ${in}
  description = [2;35mJAVA JAR ${out}[0m

rule javatest
  command = PYTHONPATH=/home/zhuchun/app_store/blade/blade-build/src:$$PYTHONPATH /usr/bin/python -m blade.builtin_tools java_test --script=${out} --main_class=${mainclass} --jacocoagent= --packages_under_test=${packages_under_test} ${in}
  description = [2;35mJAVA TEST ${out}[0m

rule fatjar
  command = PYTHONPATH=/home/zhuchun/app_store/blade/blade-build/src:$$PYTHONPATH /usr/bin/python -m blade.builtin_tools java_fatjar --output=${out} --compression_level=6 --conflict_severity=warning ${in}
  description = [2;35mFAT JAR ${out}[0m

rule onejar
  command = PYTHONPATH=/home/zhuchun/app_store/blade/blade-build/src:$$PYTHONPATH /usr/bin/python -m blade.builtin_tools java_onejar --onejar=${out} --bootjar= --main_class=${mainclass} ${in}
  description = [2;35mONE JAR ${out}[0m

rule javabinary
  command = PYTHONPATH=/home/zhuchun/app_store/blade/blade-build/src:$$PYTHONPATH /usr/bin/python -m blade.builtin_tools java_binary ${out} ${in}
  description = [2;35mJAVA BINARY ${out}[0m

scalacflags = -nowarn

rule scalac
  command = JAVACMD=java scalac -encoding UTF8 -d ${out} -classpath ${classpath} ${scalacflags} ${in}
  description = [2;35mSCALAC ${out}[0m

rule scalatest
  command = PYTHONPATH=/home/zhuchun/app_store/blade/blade-build/src:$$PYTHONPATH /usr/bin/python -m blade.builtin_tools scala_test --java=java --scala=scala --jacocoagent= --packages_under_test=${packages_under_test} --script=${out} ${in}
  description = [2;35mSCALA TEST ${out}[0m

rule thrift
  command = /usr/local/bin/thrift --gen cpp:include_prefix,pure_enums -I .  -I `dirname ${in}` -out build64_release/`dirname ${in}` ${in}
  description = [2;35mTHRIFT ${in}[0m

rule pythonlibrary
  command = PYTHONPATH=/home/zhuchun/app_store/blade/blade-build/src:$$PYTHONPATH /usr/bin/python -m blade.builtin_tools python_library --basedir=${basedir} --pylib=${out} ${in}
  description = [2;35mPYTHON LIBRARY ${out}[0m

rule pythonbinary
  command = PYTHONPATH=/home/zhuchun/app_store/blade/blade-build/src:$$PYTHONPATH /usr/bin/python -m blade.builtin_tools python_binary --basedir=${basedir} --exclusions=${exclusions} --mainentry=${mainentry} --pybin=${out} ${in}
  description = [2;35mPYTHON BINARY ${out}[0m

rule shelltest
  command = PYTHONPATH=/home/zhuchun/app_store/blade/blade-build/src:$$PYTHONPATH /usr/bin/python -m blade.builtin_tools shell_test ${out} ${in}
  description = [2;35mSHELL TEST ${out}[0m

rule shelltestdata
  command = PYTHONPATH=/home/zhuchun/app_store/blade/blade-build/src:$$PYTHONPATH /usr/bin/python -m blade.builtin_tools shell_testdata ${out} ${in} ${testdata}
  description = [2;35mSHELL TEST DATA ${out}[0m

rule lex
  command = flex ${lexflags} -o ${out} ${in}
  description = [2;35mLEX ${in}[0m

rule yacc
  command = bison ${yaccflags} -o ${out} ${in}
  description = [2;35mYACC ${in}[0m

rule package
  command = PYTHONPATH=/home/zhuchun/app_store/blade/blade-build/src:$$PYTHONPATH /usr/bin/python -m blade.builtin_tools package ${out} ${in} ${entries}
  description = [2;35mPACKAGE ${out}[0m

rule package_tar
  command = tar -c -f ${out} ${tarflags} -C ${packageroot} ${entries}
  description = [2;35mTAR ${out}[0m

rule package_zip
  command = cd ${packageroot} && zip -q temp_archive.zip ${entries} && cd - && mv ${packageroot}/temp_archive.zip ${out}
  description = [2;35mZIP ${out}[0m

rule scm
  command = PYTHONPATH=/home/zhuchun/app_store/blade/blade-build/src:$$PYTHONPATH /usr/bin/python -m blade.builtin_tools scm --scm=${out} --revision=${revision} --url=${url} --profile=${profile} --compiler="${compiler}"
  description = [2;35mSCM ${out}[0m

build build64_release/scm.cc: scm
  revision = unknown
  url = unknown
  profile = release
  compiler = gcc 7

build build64_release/scm.cc.o: cxx build64_release/scm.cc
  cppflags = -w -O2
  cxx_warnings =

rule cudacc
  command = nvcc -ccbin g++ -o ${out} -MMD -MF ${out}.d -Xcompiler -fPIC ${optimize} -I. -Ibuild64_release ${includes} ${cppflags} -c ${in}
  description = [2;35mCUDA LIBRARY ${out}[0m

rule cudalink
  command = nvcc -o ${out} ${includes} ${cppflags} ${target_linkflags} ${extra_linkflags} ${in}
  description = [2;35mCUDA LINK BINARY ${out}[0m

rule cudasolink
  command = nvcc -shared -o ${out} ${includes} ${cppflags} ${target_linkflags} ${extra_linkflags} ${in}
  description = [2;35mCUDA LINK SHARED ${out}[0m

include build64_release/thirdparty/muduo-cpp11/base/muduo_base.build.ninja
include build64_release/thirdparty/muduo-cpp11/net/muduo_test.build.ninja
include build64_release/thirdparty/muduo-cpp11/base/muduo_test.build.ninja
include build64_release/thirdparty/muduo/muduo_base.build.ninja
include build64_release/http_server/muduo_test.build.ninja
include build64_release/http_server/http_request.build.ninja
include build64_release/thirdparty/muduo-cpp11/net/muduo_net.build.ninja
include build64_release/thirdparty/muduo/muduo_net.build.ninja
include build64_release/http_server/http_context.build.ninja
include build64_release/http_server/http_response.build.ninja
include build64_release/http_server/http_server.build.ninja
